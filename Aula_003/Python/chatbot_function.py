import gradio as gr
import google.generativeai as genai
import os
import time
from google.api_core.exceptions import InvalidArgument
from home_assistant import set_light_state, intruder_alert
from home_assistant import start_music, good_morning

genai.configure(api_key=os.environ["GEMINI_API_KEY"])
initial_prompt = (
    "Voc√™ √© um assistente virtual que pode controlar dispositivos dom√©sticos."
    "Voc√™ tem acesso a fun√ß√µes que controlam a casa da pessoa que est√° usando."
    "Chame as fun√ß√µes quando achar que deve, mas nunca exponha o c√≥digo delas."
    "Assuma que a pessoa √© amig√°vel e ajude-a a entender se algo der errado"
    "ou se voc√™ precisar de mais informa√ß√µes. N√£o esque√ßa de chamar as fun√ß√µes"
)
model = genai.GenerativeModel(
    model_name="gemini-1.5-flash",
    tools=[set_light_state, intruder_alert, start_music, good_morning],
    system_instruction=initial_prompt,
)

chat = model.start_chat(enable_automatic_function_calling=True)
chat.send_message(
    "Ol√°, tudo bem?"
    """estou rodando um codigo python que gerencia fun√ß√µes
    que alteram os estados de dispositivos de casa inteligente"""
)


def upload_file(message):
    responseFiles = []

    if message["files"]:
        for file in message["files"]:
            uploaded_file = genai.upload_file(file["path"])
            while uploaded_file.state.name == "PROCESSING":
                time.sleep(3)
                uploaded_file = genai.upload_file(uploaded_file.name)
            responseFiles.append(uploaded_file)

    return responseFiles


def gradio_chat(message, _history):
    responseFiles = upload_file(message)
    promptExtends = [message["text"]]

    promptExtends.extend(responseFiles)
    try:
        response = chat.send_message(promptExtends).text
    except InvalidArgument as e:
        response = chat.send_message(
            f"O usu√°rio te enviou um arquivo para voc√™ ler e obteve erro: {e}."
            "Pode explicar o que houve e dizer quais tipos de arquivos voc√™ "
            "d√° suporte? Assuma que a pessoa n√£o sabe programa√ß√£o e "
            "n√£o quer o erro original. Explique de forma simples e concisa."
        ).text

    return response


chat_interface = gr.ChatInterface(
    fn=gradio_chat, title="Assistente Inteligente üè†", multimodal=True
)
chat_interface.launch()
